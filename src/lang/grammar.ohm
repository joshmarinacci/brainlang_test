Filament {
  Exp
    = OprExp

  BinOp
    =  "**"
    | "*"
    | "/"
    | "mod"
    | "+"
    | "-"

  UnOp
    = "!"

  OprExp
    = PriExp BinOp PriExp --binop
    | UnOp PriExp --unop
    | PriExp

  PriExp
    = Exp ">>" Exp -- pipeline_right
    | Exp "<<" Exp -- pipeline_left
    | Funcall
    | "(" Exp ")"  -- paren
    | "+" PriExp   -- pos
    | "-" PriExp   -- neg
    | List
    | UnitNumber
    | string
    | ident

  Funcall
    = ident "(" Arg ("," Arg)* ")" --with_args
    | ident "(" ")" --noargs

  Arg
    = ident ":" Exp --named_arg
    | Exp           --indexed_arg

  List
    = "[" PriExp ("," PriExp)* "]" -- full
    | "[" "]"        -- empty


  hexdigunder = "a".."f"|"A".."F"|"0".."9" | "_"
  underscore = "_"
  digunder = digit | underscore
  q = "\'"
  qq = "\""
  str = letter | space | underscore | digit
  string
    = qq (~qq any)* qq
    |  q (~q  any)*  q

  number  (a number)
    = ("0x" | "0X") hexdigunder+  -- hex
    | digunder* "." digunder+     -- float
    | digunder+                   -- integer

  unit = letter+
  numberunit = number unit

  ident = letter (letter | number | underscore)*

  UnitNumber
    = number unit -- with_unit
    | numberunit  -- with_unit2
    | number      -- without_unit

}

